upstream nestjs_backend {
    server nestjs-app:4000;
}

# HTTP Server - Redirect to HTTPS
server {
    listen 80;
    server_name api.staging.myfreecarvalue.com;

    # Allow Certbot renewal challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server
server {
    listen 443 ssl;
    http2 on;
    server_name api.staging.myfreecarvalue.com;

    # SSL Certificate paths
    ssl_certificate /etc/letsencrypt/live/api.staging.myfreecarvalue.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.staging.myfreecarvalue.com/privkey.pem;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS headers
    add_header Access-Control-Allow-Origin "https://staging.myfreecarvalue.com" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
    add_header Access-Control-Allow-Credentials "true" always;

    # Increase timeouts for API operations
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    send_timeout 600s;

    # Increase body size for file uploads
    client_max_body_size 20M;

    # Logging
    access_log /var/log/nginx/staging_access.log;
    error_log /var/log/nginx/staging_error.log;

    # Handle preflight OPTIONS requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Main API location
    location / {
        proxy_pass http://nestjs_backend;
        proxy_http_version 1.1;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Standard headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint (no logging)
    location /health {
        access_log off;
        proxy_pass http://nestjs_backend/health;
    }
}